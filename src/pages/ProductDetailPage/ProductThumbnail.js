import React, { useEffect } from 'react';
import { useState, useRef } from 'react';
import { Box, IconButton, Paper } from '@mui/material';
import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';
import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';
import styles from './ProductThumbnail.module.scss';
import classNames from 'classnames/bind';
import { Swiper, SwiperSlide } from 'swiper/react';
import 'swiper/css';
import 'swiper/css/navigation';
import { Navigation, Scrollbar, EffectFade, Thumbs, FreeMode } from 'swiper/modules';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import axios from 'axios';

const cx = classNames.bind(styles);

function ProductThumbnail({ id }) {
   console.log('idthumbnil', id);

   const [thumbsSwiper, setThumbsSwiper] = useState(null);
   const [images, setImages] = useState([]); // State ƒë·ªÉ l∆∞u tr·ªØ h√¨nh ·∫£nh thumbnail

   const swiperRef = useRef(null); // T·∫°o ref cho Swiper

   useEffect(() => {
      const axiosThumbail = async () => {
         try {
            const response = await axios.get(`http://localhost:3002/products/${id}`);

            setImages(response.data.images); // L∆∞u tr·ªØ h√¨nh ·∫£nh v√†o state
            console.log('images', response.data);
         } catch (error) {
            console.error('Error fetching thumbnail images:', error);
         }
      };

      axiosThumbail();
   }, []);

   const theme = createTheme({
      components: {
         MuiIconButton: {
            styleOverrides: {
               root: {
                  variants: [
                     {
                        props: { color: 'primary' },
                        style: {
                           color: '#000',
                           backgroundColor: '#fff',
                           ':hover': {
                              backgroundColor: '#fff',
                           },
                        },
                     },
                  ],
               },
            },
         },
      },
   });

   return (
      <ThemeProvider theme={theme}>
         <Box sx={{ display: 'flex', gap: '10px' }}>
            {/* =================== THUMBNAIL BEN TR√ÅI ==================== */}
            <Swiper
               spaceBetween={10}
               slidesPerView={4}
               direction="vertical"
               loop={true}
               observer={true} // C·∫≠p nh·∫≠t Swiper khi component thay ƒë·ªïi
               observeParents={true} // C·∫≠p nh·∫≠t Swiper n·∫øu container thay ƒë·ªïi
               watchSlidesProgress={true}
               watchSlidesVisibility={true} // üîπ Gi√∫p Swiper nh·∫≠n di·ªán slide n√†o ƒëang hi·ªÉn th·ªã
               modules={[Scrollbar, FreeMode]}
               freeMode={{ enabled: false, momentumBounce: false }} // Gi·∫£m hi·ªán t∆∞·ª£ng ƒë·ª©ng n·ª≠a v·ªùi
               speed={500}
               onSwiper={setThumbsSwiper}
               className={cx('thumbnail-slider')}
            >
               {images.map((src, index) => (
                  <SwiperSlide key={index}>
                     <img src={src.imageUrl} alt={`Thumbnail ${index + 1}`} />
                  </SwiperSlide>
               ))}
            </Swiper>

            {/* =================== SLIDE CH√çNH ==================== */}
            <Swiper
               onSwiper={(swiper) => (swiperRef.current = swiper)}
               ref={swiperRef} // G√°n ref v√†o Swiper
               modules={[Navigation, Thumbs, EffectFade]}
               // navigation={{ nextEl: '.next-btn', prevEl: '.prev-btn' }}
               // navigation={true}
               observer={true} // C·∫≠p nh·∫≠t Swiper khi component thay ƒë·ªïi
               observeParents={true}
               loop={true}
               thumbs={{ swiper: thumbsSwiper }}
               speed={500}
               watchOverflow={true}
               allowTouchMove={true} // ƒê·∫£m b·∫£o c√≥ th·ªÉ k√©o
               resistanceRatio={0} // Gi·∫£m l·ª±c c·∫£n khi k√©o
               onSlideChange={(swiper) => {
                  const activeIndex = swiper.realIndex; // üîπ D√πng realIndex ƒë·ªÉ ƒë·ªìng b·ªô
                  thumbsSwiper?.slideToLoop(activeIndex); // üîπ D√πng slideToLoop ƒë·ªÉ gi·ªØ ƒë·ªìng b·ªô
               }}
               className={cx('main-slider')}
            >
               {images.map((src, index) => (
                  <SwiperSlide key={index}>
                     <img src={src.imageUrl} alt={`Product ${index + 1}`} className={cx('main-image')} />
                  </SwiperSlide>
               ))}

               {/* =================== N√öT ƒêI·ªÄU H∆Ø·ªöNG ==================== */}
               <IconButton
                  color="primary"
                  onClick={() => {
                     swiperRef.current?.slidePrev();
                     const activeIndex = swiperRef.current?.realIndex;
                     thumbsSwiper?.slideToLoop(activeIndex);
                  }}
                  sx={{ position: 'absolute', transform: 'translateY(-50%)' }}
                  className={cx('prev-btn')}
               >
                  <ArrowBackIosNewIcon />
               </IconButton>
               <IconButton
                  color="primary"
                  onClick={() => {
                     swiperRef.current?.slideNext();
                     const activeIndex = swiperRef.current?.realIndex;
                     thumbsSwiper?.slideToLoop(activeIndex);
                  }}
                  sx={{ position: 'absolute', transform: 'translateY(-50%)' }}
                  className={cx('next-btn')}
               >
                  <ArrowForwardIosIcon />
               </IconButton>
            </Swiper>
         </Box>
      </ThemeProvider>
   );
}

export default ProductThumbnail;
